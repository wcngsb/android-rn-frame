apply plugin: 'com.android.library'

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 27)
    buildToolsVersion safeExtGet('buildToolsVersion', '27.0.0')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 27)
        versionCode 1
        versionName "1.0"

        // Enabling multidex support.
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    implementation 'com.umeng.sdk:common:1.5.3'
    implementation 'com.umeng.sdk:analytics:7.5.3'
    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation 'io.sentry:sentry-android:1.7.5'
    //noinspection GradleCompatible,GradleDependency
    implementation "com.android.support:support-v4:${safeExtGet('supportLibVersion', '27.1.1')}"
    //noinspection GradleDependency
    implementation "com.android.support:appcompat-v7:${safeExtGet('supportLibVersion', '27.1.1')}"
    //noinspection GradleDependency
    implementation "com.android.support:recyclerview-v7:${safeExtGet('supportLibVersion', '27.1.1')}"

    //noinspection GradleDependency
    implementation "com.jakewharton:butterknife:${safeExtGet('bkVersion', '9.0.0')}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${safeExtGet('bkVersion', '9.0.0')}"
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'org.apache.ant:ant:1.8.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}
